# Generated by Django 5.2 on 2025-05-30 14:33

import django.db.models.deletion
import django.utils.timezone
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_profile_set', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20)),
                ('relation', models.CharField(max_length=30)),
                ('is_visible', models.BooleanField(default=False)),
                ('family_certificate_url', models.URLField(blank=True, null=True)),
                ('disability_certificate_url', models.URLField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(blank=True, max_length=50, null=True)),
                ('_birthYMD', models.DateField(blank=True, null=True)),
                ('_gender', models.CharField(blank=True, max_length=10, null=True)),
                ('_sex_orientation', models.CharField(blank=True, max_length=20, null=True)),
                ('_communication_way', models.JSONField(blank=True, default=list)),
                ('_current_location_lat', models.FloatField(blank=True, null=True)),
                ('_current_location_lon', models.FloatField(blank=True, null=True)),
                ('_match_distance', models.IntegerField(blank=True, default=5, null=True)),
                ('_protector_info_name', models.CharField(default='홍길동', max_length=100)),
                ('_protector_info_birth_date', models.DateField(blank=True, null=True)),
                ('_protector_info_phone', models.CharField(default='010-0000-0000', max_length=20)),
                ('_protector_info_relationship', models.CharField(default='보호자', max_length=50)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('preferred_gender', models.CharField(blank=True, choices=[('male', '남성'), ('female', '여성'), ('other', '기타')], max_length=10, null=True)),
                ('preferred_orientation', models.CharField(blank=True, choices=[('heterosexual', '이성애자'), ('homosexual', '동성애자'), ('bisexual', '양성애자')], max_length=20, null=True)),
                ('interests', models.ManyToManyField(blank=True, related_name='profiles', to='users.interest')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
