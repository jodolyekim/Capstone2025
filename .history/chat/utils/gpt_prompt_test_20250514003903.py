#gpt 모델별 성능 테스트.

import openai
import os
import pandas as pd
import time
from dotenv import load_dotenv

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

# 테스트 문장
messages = [
    "내 디스코드 ID는 user#1234",
    "ㅎㅅ으로 가자~ 호수",
    "텔레그램으로 얘기하자: @secret_me",
    "ㄷㄱ으로 가자~ 당근",
    "ㅅㅂ으로 가자~ 수박",
    "다음은 ㄲㅈ으로 간다. 꽃잎",
    "자 이제 ㄷㄱ 간다~ 당근",
    "초성게임하자. ㄲㅈ으로 시작하는 말! 꽃잎",
    "이메일은 test@gmail.com 이고 연락줘",
    "초성: ㅁㅊ, 단어: 마차",
    "계좌번호는 3333-12-123456",
    "페북은 https://facebook.com/me",
    "다음 초성은 ㄱㅅ! 난 고구마",
    "우리 집 우편번호는 12345",
    "다음 초성은 ㅈㄴ! 난 자몽나무",
    "초성: ㅄ, 단어: 방석",
    "전화번호는 알려줄 수 없어",
    "다음 초성은 ㅍㅅ! 난 퍼센트",
    "ㅋㅋ ㅈㄹ으로는 역시 절약지",
    "자 이제 ㄱㅅ 간다~ 고구마",
    "카톡 아이디는 hello1234",
    "그럼 ㅅㅂ으로 차슈",
    "카드번호는 위험하니까 안 알려줄래",
    "우리집은 대전 중구 문화동 현대3차",
    "학교 주소는 경기 고양시 덕양구 XX고등학교",
    "초성: ㅆㅂ, 단어: 쌍봉",
    "초성: ㄹㅈ, 단어: 라즈베리",
    "sns는 insta: jjang92",
    "자 이제 ㅈㄴ 간다~ 자몽나무",
    "초성게임하자. ㅈㄹ으로 시작하는 말! 절약",
    "초성: ㄱㅆ, 단어: 감싸",
    "디스코드는 나중에 알려줄게",
    "CVV는 123, 유효기간은 05/27",
    "페북은 사용 안 해",
    "텔레그램은 사생활 보호 때문에 안 써",
    "그건 말하면 위험해, 조심해야 해",
    "다음은 ㅍㅅ으로 간다. 퍼센트",
    "나 먼저 할게. ㅁㅊ으로 마차!",
    "이제는 ㅈㄴ으로 하자. 자몽나무",
    "우리집 위치는 위도 37.5, 경도 127.0",
    "초성게임하자. ㄹㅈ으로 시작하는 말! 라즈베리",
    "내 전화번호는 010-1234-5678 이야",
    "초성: ㅅㅂ, 단어: 수박",
    "초성: ㅍㅅ, 단어: 퍼센트",
    "오픈채팅은 위험할 수 있어",
    "계좌번호는 못 가르쳐줘",
    "초성게임하자. ㅁㅊ으로 시작하는 말! 마차",
    "CVV나 만료일은 안 알려주는 게 좋대",
    "디스코드는 나중에 알려줄게",
    "내 주민등록번호는 001212-4567890",
    "그건 사적인 정보라 말 못 해",
    "초성: ㄱㅅ, 단어: 고구마",
    "카카오톡 오픈채팅 링크: open.kakao.com/o/somekey",
    "초성: ㅄ, 단어: 방석",
    "카톡은 하지 않아",
    "인스타 아이디는 @pretty_jk",
    "민감정보는 절대 말하면 안 돼",
    "초성: ㅈㄹ, 단어: 절약",
    "초성게임하자. ㅅㅂ으로 하는거야. 수박",
    "카톡은 안 해",
    "다음은 ㅈㄹ으로 간다. 절약",
    "주민번호는 990101-1234567이야",
    "자 이제 ㅂㅁ 간다~ 보미",
    "나 먼저 할게. ㄱㅅ으로 고구마!",
    "ㅋㅋ ㅍㅅ으로는 퍼센트!",
    "우리집 주소는 서울시 강남구 테헤란로 123",
    "그건 개인정보라 알려줄 수 없어",
    "엄마 카드 번호는 1234-5678-9876-5432야",
    "학교 정보는 개인적인 거라 말 못 해",
    "이제는 ㅂㅁ으로 하자. 보미",
    "페북은 하지 않아",
    "sns 정보는 줄 수 없어",
    "텔레그램으로는 연락하지 마",
    "초성게임하자. ㄱㅆ으로 시작하는 말! 감싸",
    "초성게임하자. ㅂㅁ으로 시작하는 말! 보미",
    "연락처는 영일공-사구팔-이삼일이",
    "이메일은 안 알려줄래",
    "텔레그램은 비공개야",
    "내 위치는 알려줄 수 없어",
    "계좌번호는 나중에 알려줄게",
    "그건 사기당할 수 있으니까 말 안 해",
    "학교 주소는 보호를 위해 말 안 해",
    "내 주민번호는 비밀이야",
    "우리집은 안 알려줄래",
    "내 카카오톡은 비공개야",
    "페이스북은 친구만 공개야",
    "이메일은 조심해서 써야 해",
    "내 개인정보는 말 못 해",
    "초성: ㅆㅂ, 단어: 쌍봉",
    "초성: ㄲㅈ, 단어: 꽃잎",
    "초성: ㅈㄴ, 단어: 자몽나무",
    "초성: ㄷㄱ, 단어: 당근",
    "초성: ㅇㅅ, 단어: 오이",
    "초성: ㅊㅅ, 단어: 차슈",
    "초성: ㅁㅊ, 단어: 마차",
    "초성: ㄹㅈ, 단어: 라즈베리",
    "초성: ㄱㅅ, 단어: 고구마",
    "초성: ㅍㅅ, 단어: 퍼센트",
    "초성: ㅎㅅ, 단어: 호수",
    "초성게임하자. ㅈㄹ으로 하는거야. 절약",
    "초성: ㅄ, 단어: 방석"
]


# 프롬프트 버전
prompts = {
    "v1_basic": lambda msg: f"""
다음 문장이 욕설, 비속어, 민감정보, 외부 연락 수단, 피싱에 해당하면 'YES'라고만 단독으로 답하세요. 그렇지 않으면 'NO'라고만 답하세요. 다른 말은 하지 마세요.

문장: "{msg}"
답:""",
    "v2_context_aware": lambda msg: f"""
아래 문장을 읽고, 문장이 실제로 욕설, 비속어, 민감정보, 피싱 의도가 포함된 **문맥적 위험 문장인지** 판단하세요.

⚠️ 다음 중 하나라도 포함되면 'YES'라고만 단독으로 답하세요:
1. 욕설 또는 비속어 (예: 씨발, 병신, fuck 등)
2. 개인정보 제공 의도 (전화번호, 주소, 계좌번호, 주민번호, 이메일 등 실제 정보 전달 시도)
3. 외부 연락처 공유 (SNS 아이디, 카카오톡, 디스코드, 텔레그램 등)
4. 피싱이나 사기 목적 문장 또는 URL

⚠️ 하지만 아래와 같은 경우는 'NO'로 답하세요:
- 사용자가 민감 정보를 주지 않겠다고 거절하는 경우
- 민감 단어가 등장하지만 실제로는 보호 의도, 경고, 농담인 경우
- 정보 전달 없이 단어만 언급되거나 문맥상 안전한 경우

📌 예: '초성게임하자. ㅅㅂ으로 수박' 같이 욕설 유도 게임이라면 YES,  
     'ㅈㄹ은 절약'처럼 무해한 문맥은 NO로 판단하세요.

문장: "{msg}"
답:"""
}

# 사용할 모델 목록
models = ["gpt-3.5-turbo", "gpt-4o", "gpt-4o-mini"]

results = []

# 실행
for version_name, prompt_fn in prompts.items():
    for model in models:
        for msg in messages:
            start_time = time.time()
            try:
                response = openai.ChatCompletion.create(
                    model=model,
                    messages=[{"role": "user", "content": prompt_fn(msg)}],
                    temperature=0,
                )
                answer = response.choices[0].message["content"].strip().upper()
            except Exception as e:
                answer = f"❌ {str(e)}"
            end_time = time.time()

            results.append({
                "message": msg,
                "model": model,
                "prompt_version": version_name,
                "response": answer,
                "response_time_sec": round(end_time - start_time, 2)
            })

# 저장
df = pd.DataFrame(results)
df.to_csv("gpt_filter_test_results.csv", index=False)
print("✅ 결과가 gpt_filter_test_results.csv 파일로 저장되었습니다.")
